 1>   Class Component

      // App.js
import React, { Component } from 'react';
class welcome extends Component
{
  render()
{
  return  <h1> class component</h1>
}
}

export default welcome;

      //  Welcome.js
const greet = () => "hello world";
export default greet;


2>   FUNCTIONAL COMPONENT
       //App.js

import Welcome from './component/welcome';
export default Welcome;


      //Welcome.js

import React from 'react';
function Welcome(){
    <style>
        background-color: pink;
    </style>
    return <h1><center>welcome to react</center></h1>
}
export default Welcome;

3>   ARROW FUNCTION (.js)
    //arrow.js
let add=function(num1,num2)
{
    return num1 + num2;
}
let sum=add
let result=sum(5,6)
console.log(result); // Output: 11

4>    DATATYPE<html>


<!DOCTYPE html>
<html>
    <head>
        <title> datatype </title>
    </head>
    <body>
        <script>
            var a,b,c;
            document.write("<h1>Before initialization</h1>");
            document.write("<br> Datatype of a is: " + typeof a);
            document.write("<br> Datatype of b is: " + typeof b);
            document.write("<br> Datatype of c is: " + typeof c);
            a=10;
            b=34.1;
            c="Hello";
            var marks=[30,60,90,100];
            var student={name:"Sachin",rollNo:29};
            document.write("<h1>After initialization</h1>");
            document.write("<br> Datatype of a is: " + typeof a);
            document.write("<br> Datatype of b is: " + typeof b);
            document.write("<br> Datatype of c is: " + typeof c);
            document.write("<br> Datatype of marks is: " + typeof marks);
            document.write("<br> Datatype of student is: " + typeof student);
            </script>
            </body>
            </html>


5>   CONSTRUCTOR
   // No argument Constructor

function Person0()
{
    this.fname="Sachin";
    this.lname="Kumar";
}
const Person=new Person0()
console.log(Person);

    // PARAMITRIZED CONSTRUCTOR
function person(fname,lname,age)
{
    this.fname=fname;
    this.lname=lname;
    this.age=age;
}
    const person8=new person("Sachin", "Kumar", 30);
    const person9=new person("kartik", "bhandarkar", 25);

    console.log(person8);
    console.log(person9);


6>   OBJECT PROPERTIES AND ACCESSING
 const fruit={
    name: "Apple",
    color: "Red",
    weight: "150g",
    taste: "Sweet",
};
console.log(fruit);



7>   SPREAD OPERATOR
function sum(a, b, c, d, e)
{
    return a + b + c + d + e;
}
let num = [2,4,5,7,89];
let result = sum(...num);
console.log(result); // Output: 107


8>   SET
let num=new Set()
num.add(2);
num.add(3);
num.add(4);
num.add("sachin");
console.log(num);



9>   MAP
let fruits = new Map([
    ["apple", "red"],
    ["banana", "yellow"],
    ["grape", "purple"],
    ["orange", "orange"]
]);
console.log(fruits);

10>    SHOPPING
    //App.js
 import "./App.css";
 import { useState, useEffect } from "react";
 // Header Component
 function Header({ count, handleShow }) {
  return (
    <div className="flex shopping-card">
      <div onClick={() => handleShow(false)}>ShoppingCart App</div>
      <div onClick={() => handleShow(true)}>
        Cart <sup>{count}</sup>
      </div>
    </div>
  );
 }
 // ProductList Component
 function ProductList({ product, addToCart }) {
  return (
    <div className="flex product-list">
      {product.map((item, index) => (
        <div key={index} className="product-item">
          <img src={item.url} alt={item.name} width="100%" />
          <p>
            {item.name} | {item.category}
          </p>
          <p>{item.seller}</p>
          <p>Rs. {item.price}/-</p>
          <button onClick={() => addToCart(item)}>Add To Cart</button>
        </div>
      ))}
    </div>
  );
 }
 // CartList Component
 function CartList({ cart }) {
  const [CART, setCART] = useState([]);
  useEffect(() => {
    setCART(cart);
  }, [cart]);
  const updateQuantity = (index, delta) => {
    const updatedCart = CART.map((item, i) =>
      i === index
        ? { ...item, quantity: Math.max(1, item.quantity + delta) }
        : item
    );
    setCART(updatedCart);
  };
  const total = CART.reduce(

    (sum, item) => sum + item.price * item.quantity,
    0
);
  return (
    <div className="cart-list">
      {CART.map((item, index) => (
        <div key={index} className="cart-item">
          <img src={item.url} alt={item.name} width={40} />
          <span> {item.name} </span>
          <button onClick={() => updateQuantity(index, -1)}>-</button>
          <span> {item.quantity} </span>
          <button onClick={() => updateQuantity(index, 1)}>+</button>
          <span> Rs. {item.price * item.quantity} </span>
        </div>
      ))}
      <p>
        <strong>Total:</strong> Rs. {total}
      </p>
    </div>
  );
 }
 // Main App Component
 function App() {
  const [products] = useState([
    {
      url: "https://m.media-amazon.com/images/I/61Ony8rgwEL._UF1000,1000_QL80_.jpg",
      name: "IPHONE 16PRO MAX",
      category: "IPHONE",
      seller: "APPLE",
      price: 70000,
    },
  ]);
  const [cart, setCart] = useState([]);
  const [showCart, setShowCart] = useState(false);
  const addToCart = (item) => {
    setCart([...cart, { ...item, quantity: 1 }]);
  };
  return (
    <div>
      <Header count={cart.length} handleShow={setShowCart} />
      {showCart ? (
        <CartList cart={cart} />
      ) : (
        <ProductList product={products} addToCart={addToCart} />
      )}
    </div>
  );
}
export default App;



   //App.css

 .flex {
  display: flex;
  flex-wrap: wrap;
 }
 .shopping-card {
  justify-content: space-between;
  background-color: #61dafb;
  padding: 20px 30px;
  align-items: center;
  display: flex;
  font-size: 20px;
  font-weight: bold;
  cursor: pointer;
 }
 .product-item {
  width: 30%;
  margin: 10px;
  padding: 20px;
  border: 1px solid #ddd;
  border-radius: 10px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
  text-align: center;
 }
 .product-item img {
  max-height: 350px;
  object-fit: cover;
  margin-bottom: 10px;
 }
 .product-item button {
  padding: 8px 16px;
  background-color: #1976d2;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
 }
 .product-item button:hover {
  background-color: #145ca8;
 }
 .cart-list {
  padding: 20px;
 }
 .cart-item {
  display: flex;
  align-items: center;
  gap: 10px;
  margin-bottom: 15px;
  padding: 10px;
  border-bottom: 1px solid #ccc;
 }
 .cart-item button {
  padding: 4px 8px;
  font-size: 14px;
  border: 1px solid #1976d2;
  background-color: white;
  color: #1976d2;
  cursor: pointer;
  border-radius: 4px;
 }
 .cart-item button:hover {
  background-color: #1976d2;
  color: whit
 }



